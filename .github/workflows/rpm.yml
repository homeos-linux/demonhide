name: RPM Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-rpm:
    name: Build RPM Package
    runs-on: ubuntu-latest
    container:
      image: fedora:42
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for Tito

    - name: Install build dependencies
      run: |
        dnf update -y
        dnf install -y \
          tito \
          rpm-build \
          rpmdevtools \
          rust \
          cargo \
          wayland-devel \
          wayland-protocols-devel \
          glib2-devel \
          libX11-devel \
          libXfixes-devel \
          pkgconfig \
          gcc \
          git \
          make

    - name: Set up RPM build tree
      run: rpmdev-setuptree

    - name: Configure Git (required for Tito)
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git config --global --add safe.directory /github/workspace

    - name: Build source RPM with Tito
      run: |
        tito build --srpm --output=/tmp/

    - name: Build binary RPM
      run: |
        rpmbuild --rebuild /tmp/demonhide-*.src.rpm

    - name: Find built packages
      run: |
        find ~/rpmbuild/RPMS/ -name "*.rpm" -type f
        find ~/rpmbuild/SRPMS/ -name "*.rpm" -type f

    - name: Upload RPM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: rpm-packages
        path: |
          ~/rpmbuild/RPMS/**/*.rpm
          ~/rpmbuild/SRPMS/*.rpm

  test-install:
    name: Test RPM Installation
    needs: build-rpm
    runs-on: ubuntu-latest
    container:
      image: fedora:42
      
    steps:
    - name: Download RPM artifacts
      uses: actions/download-artifact@v3
      with:
        name: rpm-packages
        path: ./rpms

    - name: Install required dependencies
      run: |
        dnf update -y
        dnf install -y wayland libX11 libXfixes glib2

    - name: Test RPM installation
      run: |
        find ./rpms -name "demonhide-*.rpm" -not -name "*.src.rpm" | head -1 | xargs dnf install -y

    - name: Verify installation
      run: |
        which demonhide
        demonhide --help || echo "Help command may not be available"